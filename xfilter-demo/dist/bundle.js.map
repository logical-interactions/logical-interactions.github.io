{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 102864e17ae2bbb247fe","webpack:///external \"React\"","webpack:///./src/records/setup.ts","webpack:///./src/components/Indicator.tsx","webpack:///./src/records/XFilter/setup.ts","webpack:///./src/lib/helper.ts","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/PageContainer.tsx","webpack:///./src/components/XFilterContainer.tsx","webpack:///./src/components/XFilterChart.tsx","webpack:///external \"d3\"","webpack:///external \"SQL\"","webpack:///./src/records/XFilter/workerSetup.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","React","tryDB","query","db","run","e","console","log","sql","r","exec","length","values","map","v","columns","Date","toDateString","join","JSON","stringify","replace","executeFile","folder","fn","path","ISPROD","setupSql","helper_1","readFileSync","scripts","split","forEach","msg","source","timeNow","assertNoBigger","v1","v2","Error","_downloadHelper","blob","a","document","createElement","href","window","URL","createObjectURL","download","onclick","setTimeout","revokeObjectURL","click","downloadDB","dRaw","export","Blob","downloadQueryResultAsCSV","csvContent","rowArray","row","type","loadDb","f","FileReader","onload","Uints","Uint8Array","result","Database","readAsArrayBuffer","value","create_function","Indicator","className","parseChartData","res","cols","data_1","itxId","toString","hour","delay","distance","chart","push","x","y","data","setupXFilterDB","setup_1","queryWorker","charts","XFILTERCHARTS","reduce","acc","val","indexOf","getXFilterStmts","stmts","insertBrushItx","prepare","requestId","skipTable","sharedTable","definition","tableRes","shareSql","workerSetup_1","xFilterWorker","then","worker","postMessage","id","action","updateComponents","getXFilterChroniclesSQL","buffer","initialStateSQL","filename","request","XMLHttpRequest","open","send","status","responseText","readFileAsync","Promise","resolve","reject","xhr","onerror","statusText","ReactDOM","PageContainer_1","render","PageContainer","getElementById","XFilterContainer_1","Fragment","default","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Indicator_1","XFilterChart_1","setup_2","XFilterContainer","_super","props","_this","refreshXFilterData","bind","setPending","changeBuffer","t","state","baseData","itxIdSet","pending","additionalLatency","bufferSize","baseRes","baseDataR","keys","setState","dataR","maxItxId","Math","max","apply","parseInt","prevState","isPending","target","spinner","_a","sort","reverse","aBuffer","k","xFilterData","control","key","style","clear","position","top","backgroundColor","onChange","Component","d3","XFilterChart","zoomed","scale","event","transform","abs","width","height","baseFill","marginLeft","marginRight","marginTop","marginBottom","selectFill","maxZoomScale","vis","innerWidth","innerHeight","bandwidth","scaleLinear","rangeRound","domain","min","maxVal","limit_1","filter","yAxis","axisLeft","ticks","xAxis","axisBottom","baseBars","fill","selectBars","brushDiv","brush_1","brushX","extent","on","brushSelection","invert","ref","g","select","zoom","cursor","scaleExtent","translateExtent","float","defaultProps","colorOverride","showLabel","showAxesLabels","SQL","Worker","fetch","response","arrayBuffer","onmessage","args","opened","setup","requestId_1","skipTable_1","querySql","requestId_2","chart_1","results"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = React;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar sql = __webpack_require__(11);\r\nvar helper_1 = __webpack_require__(4);\r\nvar ISPROD = false;\r\nconsole.log(\"DB setup file executing\");\r\n// DB set up\r\nexports.db = new sql.Database();\r\n// this will hopefully make things faster\r\n// read https://sqlite.org/pragma.html\r\n// db.run(`PRAGMA main.synchronous = 0`);\r\nwindow.db = exports.db;\r\nexports.db.run(\"PRAGMA foreign_keys = ON;\");\r\n// general setup\r\nfunction tryDB(query) {\r\n    try {\r\n        exports.db.run(query);\r\n    }\r\n    catch (e) {\r\n        console.log(\"%cDB execution error for query \" + query + \", \" + e, \"background: red\");\r\n    }\r\n}\r\nexports.tryDB = tryDB;\r\n// for console debugging\r\nfunction d(sql) {\r\n    var r = exports.db.exec(sql);\r\n    if (r.length > 0) {\r\n        r[0].values.map(function (v) {\r\n            v.map(function (c, i) {\r\n                if (r[0].columns[i] === \"ts\") {\r\n                    c = new Date(c).toDateString();\r\n                }\r\n            });\r\n        });\r\n        console.log(r[0].columns.join(\"\\t\"));\r\n        console.log(JSON.stringify(r[0].values).replace(/\\],\\[/g, \"\\n\").replace(\"[[\", \"\").replace(\"]]\", \"\").replace(/,/g, \"\\t\"));\r\n    }\r\n    else {\r\n        console.log(\"NO RESULT\");\r\n    }\r\n}\r\nwindow.d = d;\r\nfunction executeFile(folder, fn) {\r\n    var path = ISPROD ? \"./dist/sql\" : \"/src/records\";\r\n    var setupSql = helper_1.readFileSync(path + \"/\" + folder + \"/\" + fn + \".sql\");\r\n    var scripts = setupSql.split(\";\\n\\n\");\r\n    scripts.forEach(function (s, i) {\r\n        s = s.replace(/^ *--.*$/mg, \"\");\r\n        if (i < scripts.length - 1) {\r\n            s += \";\";\r\n        }\r\n        // for debugging, easier to split\r\n        console.log(\"executing \", s);\r\n        exports.db.run(s);\r\n    });\r\n}\r\nexports.executeFile = executeFile;\r\n// general UDF helper\r\nfunction log(msg, source) {\r\n    console.log(\"[\" + source + \"] \" + msg);\r\n    return 1;\r\n}\r\nfunction timeNow() {\r\n    return +new Date();\r\n}\r\nfunction assertNoBigger(v1, v2, msg) {\r\n    if (v1 > v2) {\r\n        throw new Error(v1 + \" is larger than \" + v2 + \", \" + msg);\r\n    }\r\n}\r\n// must do this manually because bundling minimizes the function anmes...\r\nexports.db.create_function(\"timeNow\", timeNow);\r\nexports.db.create_function(\"log\", log);\r\nexports.db.create_function(\"assertNoBigger\", assertNoBigger);\r\n// let UDFs: any[] = [timeNow, log, assertNoBigger];\r\n// UDFs.forEach((f) => {\r\n//   console.log(\"[UDF] shared setup\", f.name);\r\n// });\r\nfunction _downloadHelper(blob, name) {\r\n    var a = document.createElement(\"a\");\r\n    a.href = window.URL.createObjectURL(blob);\r\n    a.download = name;\r\n    a.onclick = function () {\r\n        setTimeout(function () {\r\n            window.URL.revokeObjectURL(a.href);\r\n        }, 1500);\r\n    };\r\n    a.click();\r\n}\r\nfunction downloadDB() {\r\n    console.log(\"download session\");\r\n    var dRaw = exports.db.export();\r\n    var blob = new Blob([dRaw]);\r\n    _downloadHelper(blob, \"session.db\");\r\n}\r\nexports.downloadDB = downloadDB;\r\nwindow.downloadDB = downloadDB;\r\nfunction downloadQueryResultAsCSV(query) {\r\n    var csvContent = \"\";\r\n    var r = exports.db.exec(query);\r\n    if (r.length && r[0].values) {\r\n        csvContent += r[0].columns.join(\",\") + \"\\r\\n\";\r\n        r[0].values.forEach(function (rowArray) {\r\n            var row = rowArray.join(\",\");\r\n            csvContent += row + \"\\r\\n\";\r\n        });\r\n        var b = new Blob([csvContent], { type: \"text/plain;charset=UTF-8\" });\r\n        _downloadHelper(b, \"userData.csv\");\r\n        console.log(\"should have downloaded\", csvContent);\r\n    }\r\n    else {\r\n        console.log(\"NO RESULT\");\r\n    }\r\n}\r\nexports.downloadQueryResultAsCSV = downloadQueryResultAsCSV;\r\nfunction loadDb(f) {\r\n    // delete the current DB and create a new one\r\n    var r = new FileReader();\r\n    r.onload = function () {\r\n        console.log(\"Updated to the updated session\");\r\n        var Uints = new Uint8Array(r.result);\r\n        exports.db = new sql.Database(Uints);\r\n    };\r\n    r.readAsArrayBuffer(f);\r\n}\r\nexports.loadDb = loadDb;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nexports.Indicator = function () {\r\n    return React.createElement(\"div\", { className: \"indicator inline-block\" });\r\n};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar setup_1 = __webpack_require__(1);\r\nvar workerSetup_1 = __webpack_require__(12);\r\nexports.XFILTERCHARTS = [\"hour\", \"delay\", \"distance\"];\r\n// data shape transformations...\r\nfunction parseChartData(res) {\r\n    if (res[0] && res[0].values && res[0].values.length > 0) {\r\n        var cols = res[0].columns;\r\n        if ((cols[0] !== \"chart\") || (cols[1] !== \"bin\") || (cols[2] !== \"count\") || (cols[3] !== \"itxId\")) {\r\n            throw new Error(\"Section do not match\");\r\n        }\r\n        var v = res[0].values;\r\n        var itxId = -1;\r\n        var data_1 = {};\r\n        v.forEach(function (e) {\r\n            // so annoying\r\n            var itxId = e[3].toString(10);\r\n            if (!(itxId in data_1)) {\r\n                data_1[itxId] = {\r\n                    hour: [],\r\n                    delay: [],\r\n                    distance: []\r\n                };\r\n            }\r\n            var chart = e[0];\r\n            data_1[itxId][chart].push({ x: e[1], y: e[2] });\r\n        });\r\n        console.log(\"returning data\", data_1);\r\n        return {\r\n            data: data_1\r\n        };\r\n    }\r\n    return {\r\n        data: null\r\n    };\r\n}\r\nexports.parseChartData = parseChartData;\r\n// if buffer size is 1, normal, else, chronicles\r\n// TODO, add buffer: number\r\nfunction setupXFilterDB() {\r\n    [\"tables\", \"views\", \"dataFetchTriggers\", \"renderTriggers\"].map(function (f) { setup_1.executeFile(\"XFilter\", f); });\r\n    setup_1.db.create_function(\"queryWorker\", queryWorker);\r\n    setup_1.db.create_function(\"checkAtomic\", function (charts) {\r\n        if (!charts) {\r\n            return 0;\r\n        }\r\n        var isAtomic = exports.XFILTERCHARTS.reduce(function (acc, val) {\r\n            return acc && (charts.indexOf(val) > -1);\r\n        }, true);\r\n        // console.log(\"Xfilter atomic\", isAtomic);\r\n        if (isAtomic) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    });\r\n    // date,delay,distance,origin,destination\r\n    // let insertData = db.prepare(`INSERT INTO flight VALUES (?, ?, ?, ?, ?)`);\r\n    // // do the binning here\r\n    // d3.text(\"/data/flights.json\", function(error, _data) {\r\n    //   db.exec(\"BEGIN TRANSACTION;\");\r\n    //   let arrays = d3.csvParseRows(_data);\r\n    //   arrays.forEach(d => {\r\n    //     insertData.run(d);\r\n    //   });\r\n    //   db.exec(`INSERT INTO binnedData SELECT * FROM binnedDataView`);\r\n    //   db.exec(\"COMMIT;\");\r\n    // });\r\n}\r\nexports.setupXFilterDB = setupXFilterDB;\r\nfunction getXFilterStmts() {\r\n    var stmts;\r\n    if (!stmts) {\r\n        stmts = {\r\n            insertBrushItx: setup_1.db.prepare(\"INSERT INTO xBrushItx (ts, low, high, chart) VALUES (?, ?, ?, ?)\")\r\n        };\r\n    }\r\n    return stmts;\r\n}\r\nexports.getXFilterStmts = getXFilterStmts;\r\n// the input should already be from a group_concat\r\n// they can just specify the remote\r\nfunction queryWorker(requestId, skipTable) {\r\n    console.log(\"worker doing job\", requestId);\r\n    var sharedTable = \"xFilterRequest\";\r\n    // now get the values for\r\n    // need to share the currentIn\r\n    // could use some basic DSL here --- copy pasting\r\n    var getTableDefinition = \"\\n    SELECT sql\\n    FROM sqlite_master\\n    WHERE\\n      type = 'table'\\n      AND name = '\" + sharedTable + \"';\\n  \";\r\n    var definition = setup_1.db.exec(getTableDefinition)[0].values[0];\r\n    if (!definition) {\r\n        throw new Error(sharedTable + \" not defined in client db\");\r\n    }\r\n    var tableRes = setup_1.db.exec(\"SELECT * FROM \" + sharedTable + \" WHERE requestId = \" + requestId)[0];\r\n    if ((!tableRes) || (!tableRes.values)) {\r\n        throw new Error(\"This should not have happened, \" + sharedTable + \" should have been defined with \" + requestId);\r\n    }\r\n    // need to make null explicit here...\r\n    var shareSql = \"\\n    DROP TABLE IF EXISTS \" + sharedTable + \";\\n    \" + definition + \";\\n    INSERT INTO \" + sharedTable + \" VALUES \" + tableRes.values.map(function (d) { return \"(\" + d.map(function (v) { return v ? v : \"null\"; }).join(\", \") + \")\"; }) + \";\\n  \";\r\n    // console.log(\"sharesql\", shareSql);\r\n    var workerPromise = workerSetup_1.xFilterWorker();\r\n    workerPromise.then(function (worker) {\r\n        worker.postMessage({\r\n            id: \"insertThenShare:\" + requestId + \":\" + skipTable,\r\n            action: \"exec\",\r\n            sql: shareSql\r\n        });\r\n    });\r\n}\r\nexports.queryWorker = queryWorker;\r\nfunction updateComponents() {\r\n    // if there is a new brush\r\n    // trigger the render from the sql\r\n    var res = setup_1.db.run(\"\\n  \");\r\n    // res.values\r\n}\r\nexports.updateComponents = updateComponents;\r\n// the 0 is so that we can reuse parsing on the javascript side\r\n// #WATCH: this might be an expensive query\r\nexports.initialStateSQL = \"\\nSELECT\\n  d.chart, d.bin, d.count, 0 AS itxId\\nFROM\\n  chartData d\\n  JOIN xFilterRequest r ON d.requestId = r.requestId\\nWHERE\\n  r.hourLow IS NULL AND r.hourHigh IS NULL\\n  AND r.delayLow IS NULL AND r.delayHigh IS NULL\\n  AND r.distanceLow IS NULL AND r.distanceHigh IS NULL;\";\r\nfunction getXFilterChroniclesSQL(buffer) {\r\n    return \"\\n  SELECT\\n    d.chart,\\n    d.bin,\\n    d.count,\\n    req.itxId AS itxId\\n  FROM\\n    xFilterResponse res\\n    JOIN xFilterRequest req ON res.requestId = req.requestId\\n    JOIN chartData d ON d.requestId = res.dataId\\n  WHERE req.itxId IN (\\n      SELECT itxId FROM currentItx ORDER BY itxId DESC LIMIT \" + buffer + \"\\n    )\\n  ORDER BY itxId DESC;\";\r\n}\r\nexports.getXFilterChroniclesSQL = getXFilterChroniclesSQL;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction readFileSync(filename) {\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", filename, false); // `false` makes the request synchronous\r\n    request.send(null);\r\n    if (request.status === 200) {\r\n        return request.responseText;\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\nexports.readFileSync = readFileSync;\r\nfunction readFileAsync(filename) {\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", filename, true);\r\n        xhr.onload = function () { return resolve(xhr.responseText); };\r\n        xhr.onerror = function () { return reject(xhr.statusText); };\r\n        xhr.send();\r\n    });\r\n}\r\nexports.readFileAsync = readFileAsync;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar ReactDOM = __webpack_require__(6);\r\nvar PageContainer_1 = __webpack_require__(7);\r\nReactDOM.render(React.createElement(PageContainer_1.PageContainer, null), document.getElementById(\"wrapper\"));\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = ReactDOM;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar XFilterContainer_1 = __webpack_require__(8);\r\nexports.PageContainer = function () { return (React.createElement(React.Fragment, null,\r\n    React.createElement(XFilterContainer_1.default, null))); };\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar Indicator_1 = __webpack_require__(2);\r\nvar XFilterChart_1 = __webpack_require__(9);\r\nvar setup_1 = __webpack_require__(1);\r\nvar setup_2 = __webpack_require__(3);\r\nvar XFilterContainer = /** @class */ (function (_super) {\r\n    __extends(XFilterContainer, _super);\r\n    function XFilterContainer(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.refreshXFilterData = _this.refreshXFilterData.bind(_this);\r\n        _this.setPending = _this.setPending.bind(_this);\r\n        _this.changeBuffer = _this.changeBuffer.bind(_this);\r\n        setup_2.setupXFilterDB();\r\n        setup_1.db.create_function(\"refreshXFilter\", _this.refreshXFilterData);\r\n        setup_1.db.create_function(\"setXFilterPending\", _this.setPending);\r\n        var t = +new Date();\r\n        setup_1.db.exec(\"\\n      INSERT INTO xBrushItx (ts, chart) VALUES \" + setup_2.XFILTERCHARTS.map(function (v) { return \"(\" + t + \", '\" + v + \"')\"; }).join(\", \") + \";\\n    \");\r\n        _this.state = {\r\n            baseData: null,\r\n            data: null,\r\n            itxIdSet: [],\r\n            pending: true,\r\n            additionalLatency: 0,\r\n            bufferSize: 1,\r\n        };\r\n        return _this;\r\n    }\r\n    XFilterContainer.prototype.refreshXFilterData = function () {\r\n        if (!this.state.baseData) {\r\n            // try fetching itgroup_concat\r\n            var baseRes = setup_1.db.exec(setup_2.initialStateSQL);\r\n            var baseDataR = setup_2.parseChartData(baseRes);\r\n            if (baseDataR.data) {\r\n                if (Object.keys(baseDataR.data).length !== 1) {\r\n                    throw new Error(\"Basedata result should be exactly 1\");\r\n                }\r\n                var itxId = Object.keys(baseDataR.data)[0];\r\n                setup_1.db.exec(\"INSERT INTO xFilterRender (itxId, ts) VALUES (\" + itxId + \", \" + +new Date() + \")\");\r\n                this.setState({\r\n                    baseData: baseDataR.data[itxId],\r\n                });\r\n            }\r\n        }\r\n        var query = setup_2.getXFilterChroniclesSQL(this.state.bufferSize);\r\n        var res = setup_1.db.exec(query);\r\n        var dataR = setup_2.parseChartData(res);\r\n        if (dataR.data) {\r\n            // FIXME the pending right now is too coarse grained\r\n            var pending_1 = false;\r\n            var maxItxId = Math.max.apply(Math, Object.keys(dataR.data).map(function (v) { return parseInt(v, 10); }));\r\n            setup_1.db.exec(\"INSERT INTO xFilterRender (itxId, ts) VALUES (\" + maxItxId + \", \" + +new Date() + \")\");\r\n            console.log(\"for xFitlerRend, we have the id\", maxItxId, \"and values\", dataR.data);\r\n            this.setState(function (prevState) {\r\n                return {\r\n                    data: dataR.data,\r\n                    pending: pending_1\r\n                };\r\n            });\r\n        }\r\n    };\r\n    XFilterContainer.prototype.setPending = function (isPending) {\r\n        console.log(\"setting pending to\", isPending);\r\n        var pending = false;\r\n        if (isPending) {\r\n            pending = true;\r\n        }\r\n        this.setState({\r\n            pending: pending\r\n        });\r\n    };\r\n    XFilterContainer.prototype.changeBuffer = function (e) {\r\n        this.setState({ bufferSize: e.target.value });\r\n    };\r\n    XFilterContainer.prototype.render = function () {\r\n        // TODO add pending\r\n        var _a = this.state, baseData = _a.baseData, data = _a.data, pending = _a.pending;\r\n        var spinner;\r\n        var charts = [];\r\n        if (baseData) {\r\n            if (data) {\r\n                var keys = Object.keys(data).map(function (v) { return parseInt(v, 10); }).sort().reverse();\r\n                var _loop_1 = function (i) {\r\n                    var d = data[keys[i]];\r\n                    var aBuffer = Object.keys(baseData).map(function (k) {\r\n                        return React.createElement(XFilterChart_1.default, { baseData: baseData[k], xFilterData: d[k], control: i === 0, chart: k, key: k, pending: d[k] ? false : true });\r\n                    });\r\n                    charts.push(React.createElement(React.Fragment, null,\r\n                        aBuffer,\r\n                        React.createElement(\"div\", { style: { clear: \"both\" } })));\r\n                };\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    _loop_1(i);\r\n                }\r\n            }\r\n            else {\r\n                charts = Object.keys(baseData).map(function (k) {\r\n                    return React.createElement(XFilterChart_1.default, { baseData: baseData[k], control: true, xFilterData: null, chart: k, key: k, pending: true });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            spinner = React.createElement(React.Fragment, null,\r\n                React.createElement(Indicator_1.Indicator, null),\r\n                \"Loading Initial Data...\");\r\n        }\r\n        return (React.createElement(\"div\", { style: { position: \"sticky\", top: 0, backgroundColor: \"white\" } },\r\n            charts,\r\n            spinner,\r\n            React.createElement(\"select\", { value: this.state.bufferSize, onChange: this.changeBuffer },\r\n                React.createElement(\"option\", { value: 1 }, \"1\"),\r\n                React.createElement(\"option\", { value: 2 }, \"2\"),\r\n                React.createElement(\"option\", { value: 3 }, \"3\"),\r\n                React.createElement(\"option\", { value: 4 }, \"4\"))));\r\n    };\r\n    return XFilterContainer;\r\n}(React.Component));\r\nexports.default = XFilterContainer;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar d3 = __webpack_require__(10);\r\nvar Indicator_1 = __webpack_require__(2);\r\nvar setup_1 = __webpack_require__(3);\r\nvar XFilterChart = /** @class */ (function (_super) {\r\n    __extends(XFilterChart, _super);\r\n    function XFilterChart(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.zoomed = _this.zoomed.bind(_this);\r\n        _this.state = {\r\n            scale: 1,\r\n        };\r\n        return _this;\r\n    }\r\n    XFilterChart.prototype.zoomed = function () {\r\n        // console.log(\"zoom called, setting scale to \", d3.event.transform.k);\r\n        var scale = d3.event.transform.k;\r\n        if (Math.abs(scale - this.state.scale) > 0.05 * scale) {\r\n            this.setState({\r\n                scale: scale\r\n            });\r\n        }\r\n    };\r\n    XFilterChart.prototype.render = function () {\r\n        var _a = this.props, chart = _a.chart, width = _a.width, height = _a.height, baseFill = _a.baseFill, marginLeft = _a.marginLeft, marginRight = _a.marginRight, marginTop = _a.marginTop, marginBottom = _a.marginBottom, baseData = _a.baseData, xFilterData = _a.xFilterData, pending = _a.pending, selectFill = _a.selectFill, maxZoomScale = _a.maxZoomScale, control = _a.control;\r\n        var scale = this.state.scale;\r\n        var stmts = setup_1.getXFilterStmts();\r\n        var spinner = null;\r\n        var vis = null;\r\n        if (pending) {\r\n            spinner = React.createElement(Indicator_1.Indicator, null);\r\n        }\r\n        var innerWidth = width - marginLeft - marginRight;\r\n        var innerHeight = height - marginTop - marginBottom;\r\n        var bandwidth = innerWidth * 0.8 / baseData.length;\r\n        var x = d3.scaleLinear()\r\n            .rangeRound([0, innerWidth])\r\n            .domain([d3.min(baseData, function (d) { return d.x; }), d3.max(baseData, function (d) { return d.x; })]);\r\n        if (scale > 1) {\r\n            var maxVal = d3.max(baseData, function (d) { return d.y; });\r\n            var limit_1 = maxVal / maxZoomScale * (maxZoomScale - scale + 1);\r\n            baseData = baseData.filter(function (d) { return d.y < limit_1; });\r\n        }\r\n        var y = d3.scaleLinear()\r\n            .rangeRound([innerHeight, 0])\r\n            .domain([0, d3.max(baseData, function (d) { return d.y; })]);\r\n        var yAxis = d3.axisLeft(y).ticks(5, \"d\");\r\n        var xAxis = d3.axisBottom(x).ticks(4);\r\n        var baseBars = baseData.map(function (d, i) { return React.createElement(\"rect\", { x: x(d.x), y: y(d.y), width: bandwidth, height: innerHeight - y(d.y), fill: baseFill }); });\r\n        var selectBars = (xFilterData ? xFilterData : []).map(function (d, i) { return React.createElement(\"rect\", { x: x(d.x), y: y(d.y), width: bandwidth, height: innerHeight - y(d.y), fill: selectFill }); });\r\n        if (!xFilterData) {\r\n            spinner = React.createElement(React.Fragment, null,\r\n                React.createElement(Indicator_1.Indicator, null),\r\n                \"Processing Request\");\r\n        }\r\n        var brushDiv = null;\r\n        if (control) {\r\n            var brush_1 = d3.brushX()\r\n                .extent([[0, 0], [innerWidth, innerHeight]])\r\n                .on(\"start\", function () {\r\n                // TODO\r\n                console.log(\"brush started\");\r\n            })\r\n                .on(\"end\", function () {\r\n                var s = d3.brushSelection(this);\r\n                if (s !== null) {\r\n                    var v1 = x.invert(s[0]);\r\n                    var v2 = x.invert(s[1]);\r\n                    stmts.insertBrushItx.run([+new Date(), Math.min(v1, v2), Math.max(v1, v2), chart]);\r\n                }\r\n            });\r\n            brushDiv = React.createElement(\"g\", { ref: function (g) { return d3.select(g).call(brush_1); } });\r\n        }\r\n        vis = React.createElement(\"svg\", { width: width, height: height, ref: function (g) { d3.select(g).call(zoom); }, style: { cursor: \"ns-resize\" } },\r\n            React.createElement(\"g\", { transform: \"translate(\" + marginLeft + \", \" + marginTop + \")\" },\r\n                baseBars,\r\n                selectBars,\r\n                React.createElement(\"g\", { ref: function (g) { d3.select(g).call(yAxis); } }),\r\n                React.createElement(\"g\", { ref: function (g) { d3.select(g).call(xAxis); }, transform: \"translate(0,\" + innerHeight + \")\" }),\r\n                brushDiv,\r\n                spinner));\r\n        var zoom = d3.zoom()\r\n            .scaleExtent([1, maxZoomScale])\r\n            .translateExtent([[0, -100], [width, height]])\r\n            .on(\"zoom\", this.zoomed);\r\n        // console.log(\"brush\", brushDiv);\r\n        return (React.createElement(\"div\", { style: { float: \"left\" } }, vis));\r\n    };\r\n    // bars: SVGGElement;\r\n    // gX: SVGGElement;\r\n    // gY: SVGGElement;\r\n    XFilterChart.defaultProps = {\r\n        colorOverride: false,\r\n        baseFill: \"rgb(255, 192, 203, 0.5)\",\r\n        selectFill: \"rgb(176, 224, 230, 0.8)\",\r\n        height: 150,\r\n        marginBottom: 40,\r\n        marginLeft: 45,\r\n        marginRight: 20,\r\n        marginTop: 20,\r\n        width: 220,\r\n        showLabel: false,\r\n        showAxesLabels: true,\r\n        maxZoomScale: 5,\r\n    };\r\n    return XFilterChart;\r\n}(React.Component));\r\nexports.default = XFilterChart;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = d3;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = SQL;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helper_1 = __webpack_require__(4);\r\nvar setup_1 = __webpack_require__(1);\r\nvar worker = null;\r\n// for debugging\r\nvar opened = false;\r\nvar setup = false;\r\nwindow.worker = worker;\r\nfunction xFilterWorker() {\r\n    return new Promise(function (resolve, reject) {\r\n        if (!worker) {\r\n            worker = new Worker(\"./dist/worker.sql.js\");\r\n            fetch(\"./dist/flight_small.db\")\r\n                .then(function (response) {\r\n                if (response.status !== 200) {\r\n                    console.log(\"There was a problem: \" + response.status);\r\n                    return;\r\n                }\r\n                return response.arrayBuffer();\r\n            })\r\n                .then(function (buffer) {\r\n                console.log(\"Setting up db in the worker\", buffer);\r\n                worker.postMessage({\r\n                    id: \"open\",\r\n                    action: \"open\",\r\n                    buffer: buffer,\r\n                });\r\n            });\r\n            worker.onmessage = function (event) {\r\n                // console.log(`[Worker] ${event.data.id}`, event);\r\n                // this is tied to the queryWorker in setup.ts\r\n                var args = event.data.id.split(\":\");\r\n                var cmd = args[0];\r\n                switch (args[0]) {\r\n                    case \"open\": {\r\n                        console.log(\"[Worker] Database opened\", event);\r\n                        if (opened) {\r\n                            throw new Error(\"Should not open worker DB twice\");\r\n                        }\r\n                        opened = true;\r\n                        // /src/records/XFilter/workerViews.sql\r\n                        var setupSql = helper_1.readFileSync(\"./dist/sql/XFilter/workerViews.sql\");\r\n                        worker.postMessage({\r\n                            id: \"setup\",\r\n                            action: \"exec\",\r\n                            sql: setupSql\r\n                        });\r\n                        break;\r\n                    }\r\n                    case \"setup\": {\r\n                        if (setup) {\r\n                            throw new Error(\"Should not setup worker DB twice\");\r\n                        }\r\n                        setup = true;\r\n                        resolve(worker);\r\n                        break;\r\n                    }\r\n                    case \"insertThenShare\": {\r\n                        if ((!opened) || (!setup)) {\r\n                            throw new Error(\"Need to setup worker DB before using\");\r\n                        }\r\n                        var requestId_1 = args[1];\r\n                        var skipTable_1 = args[2];\r\n                        console.log(\"[Worker: insertThenShare] querying db to share data for requestId \" + requestId_1 + \", except \" + skipTable_1);\r\n                        [\"hour\", \"delay\", \"distance\"].map(function (n) {\r\n                            if (n !== skipTable_1) {\r\n                                var querySql = \"\\n                  SELECT * FROM \" + n + \"ChartDataView;\\n                \";\r\n                                // this is emulating a callback\r\n                                worker.postMessage({\r\n                                    id: \"share:\" + requestId_1 + \":\" + n,\r\n                                    action: \"exec\",\r\n                                    sql: querySql\r\n                                });\r\n                            }\r\n                        });\r\n                        break;\r\n                    }\r\n                    case \"share\": {\r\n                        var requestId_2 = args[1];\r\n                        var chart_1 = args[2];\r\n                        // TODO: deal with pagination later?\r\n                        if (event.data.results[0] && event.data.results[0].values.length > 0) {\r\n                            var values = event.data.results[0].values;\r\n                            var sql = \"\\n                INSERT INTO chartData VALUES \" + values.map(function (r) { return \"(\" + requestId_2 + \", \" + r[0] + \", \" + r[1] + \", '\" + chart_1 + \"')\"; }) + \";\\n                INSERT INTO chartDataAtomic VALUES (\" + requestId_2 + \", '\" + chart_1 + \"');\\n              \";\r\n                            setup_1.db.exec(sql);\r\n                            // setTimeout(() => {\r\n                            //   console.log(\"exec to client db after intentional delay\");\r\n                            //   db.exec(sql);\r\n                            // }, 1000);\r\n                        }\r\n                        else {\r\n                            console.log(\"No result for\", chart_1, requestId_2);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            worker.onerror = function (e) { console.log(\"Worker error: \", e); };\r\n        }\r\n        else {\r\n            resolve(worker);\r\n        }\r\n    });\r\n}\r\nexports.xFilterWorker = xFilterWorker;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 102864e17ae2bbb247fe","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 0\n// module chunks = 0","import * as sql from \"sql.js\";\nimport * as d3 from \"d3\";\nimport { Database } from \"sql.js\";\nimport { readFileSync } from \"../lib/helper\";\n\nconst ISPROD = false;\n\nconsole.log(\"DB setup file executing\");\n\n// DB set up\nexport let db = new sql.Database();\n\n// this will hopefully make things faster\n// read https://sqlite.org/pragma.html\n// db.run(`PRAGMA main.synchronous = 0`);\n(<any>window).db = db;\ndb.run(\"PRAGMA foreign_keys = ON;\");\n\n// general setup\n\nexport function tryDB(query: string) {\n  try {\n    db.run(query);\n  } catch (e) {\n    console.log(`%cDB execution error for query ${query}, ${e}`, \"background: red\");\n  }\n}\n\n// for console debugging\nfunction d(sql: string) {\n  let r = db.exec(sql);\n  if (r.length > 0) {\n    r[0].values.map((v) => {\n      v.map((c, i) => {\n        if (r[0].columns[i] === \"ts\") {\n          c = new Date(c as number).toDateString();\n        }\n      });\n    });\n    console.log(r[0].columns.join(\"\\t\"));\n    console.log(JSON.stringify(r[0].values).replace(/\\],\\[/g, \"\\n\").replace(\"[[\", \"\").replace(\"]]\", \"\").replace(/,/g, \"\\t\"));\n  } else {\n    console.log(\"NO RESULT\");\n  }\n}\n(<any>window).d = d;\n\nexport function executeFile(folder: string, fn: string) {\n  let path = ISPROD ? \"./dist/sql\" : \"/src/records\";\n  let setupSql = readFileSync(`${path}/${folder}/${fn}.sql`);\n  let scripts = setupSql.split(\";\\n\\n\");\n  scripts.forEach((s, i) => {\n    s = s.replace(/^ *--.*$/mg, \"\");\n    if (i < scripts.length - 1) {\n      s += \";\";\n    }\n    // for debugging, easier to split\n    console.log(\"executing \", s);\n    db.run(s);\n  });\n}\n\n// general UDF helper\n\nfunction log(msg: string, source: string) {\n  console.log(`[${source}] ${msg}`);\n  return 1;\n}\n\nfunction timeNow() {\n  return +new Date();\n}\n\nfunction assertNoBigger(v1: number, v2: number, msg: string) {\n  if (v1 > v2) {\n    throw new Error(`${v1} is larger than ${v2}, ${msg}`);\n  }\n}\n\n// must do this manually because bundling minimizes the function anmes...\ndb.create_function(\"timeNow\", timeNow);\ndb.create_function(\"log\", log);\ndb.create_function(\"assertNoBigger\", assertNoBigger);\n\n// let UDFs: any[] = [timeNow, log, assertNoBigger];\n// UDFs.forEach((f) => {\n//   console.log(\"[UDF] shared setup\", f.name);\n// });\n\nfunction _downloadHelper(blob: Blob, name: string) {\n  let a = document.createElement(\"a\");\n  a.href = window.URL.createObjectURL(blob);\n  a.download = name;\n  a.onclick = function() {\n    setTimeout(function() {\n      window.URL.revokeObjectURL(a.href);\n    }, 1500);\n  };\n  a.click();\n}\n\nexport function downloadDB() {\n  console.log(\"download session\");\n  let dRaw = db.export();\n  let blob = new Blob([dRaw]);\n  _downloadHelper(blob,  \"session.db\");\n}\n(<any>window).downloadDB = downloadDB;\n\nexport function downloadQueryResultAsCSV(query: string) {\n  let csvContent = \"\";\n  let r = db.exec(query);\n  if (r.length && r[0].values) {\n    csvContent += r[0].columns.join(\",\") + \"\\r\\n\";\n    r[0].values.forEach((rowArray) => {\n      let row = rowArray.join(\",\");\n      csvContent += row + \"\\r\\n\";\n    });\n    let b = new Blob([csvContent], {type: \"text/plain;charset=UTF-8\"});\n    _downloadHelper(b, \"userData.csv\");\n    console.log(\"should have downloaded\", csvContent);\n  } else {\n    console.log(\"NO RESULT\");\n  }\n}\n\nexport function loadDb(f: Blob) {\n  // delete the current DB and create a new one\n  let r = new FileReader();\n  r.onload = function() {\n    console.log(\"Updated to the updated session\");\n    let Uints = new Uint8Array(r.result);\n    db = new sql.Database(Uints);\n  };\n  r.readAsArrayBuffer(f);\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/records/setup.ts","import * as React from \"react\";\n\nexport const Indicator = () => {\n  return <div className=\"indicator inline-block\"></div>;\n};\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/Indicator.tsx","\nimport * as d3 from \"d3\";\nimport { Statement, QueryResults } from \"sql.js\";\n\nimport { db, executeFile } from \"../setup\";\nimport { xFilterWorker } from \"./workerSetup\";\n\nexport const XFILTERCHARTS = [\"hour\", \"delay\", \"distance\"];\n// data shape transformations...\nexport function parseChartData(res: QueryResults[]) {\n  if (res[0] && res[0].values && res[0].values.length > 0 ) {\n    let cols = res[0].columns;\n    if ((cols[0] !== \"chart\") || (cols[1] !== \"bin\") || (cols[2] !== \"count\") || (cols[3] !== \"itxId\")) {\n      throw new Error(\"Section do not match\");\n    }\n    let v = res[0].values;\n    let itxId = -1;\n    let data: {[index: string]: {[index: string]: {x: number, y: number}[]}} = {};\n    v.forEach(e => {\n      // so annoying\n      let itxId = (e[3] as number).toString(10);\n      if (!(itxId in data)) {\n        data[itxId] = {\n          hour: [],\n          delay: [],\n          distance: []\n        };\n      }\n      let chart = e[0] as string;\n      data[itxId][chart].push({x: e[1] as number, y: e[2] as number});\n    });\n    console.log(\"returning data\", data);\n    return {\n      data\n    };\n  }\n  return {\n    data: null\n  };\n}\n\n// if buffer size is 1, normal, else, chronicles\n// TODO, add buffer: number\nexport function setupXFilterDB() {\n  [\"tables\", \"views\", \"dataFetchTriggers\", \"renderTriggers\"].map(f => {executeFile(\"XFilter\", f); });\n  db.create_function(\"queryWorker\", queryWorker);\n  db.create_function(\"checkAtomic\", (charts: string) => {\n    if (!charts) {\n      return 0;\n    }\n    let isAtomic = XFILTERCHARTS.reduce((acc, val) => {\n      return acc && (charts.indexOf(val) > -1);\n    }, true);\n    // console.log(\"Xfilter atomic\", isAtomic);\n    if (isAtomic) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n  // date,delay,distance,origin,destination\n  // let insertData = db.prepare(`INSERT INTO flight VALUES (?, ?, ?, ?, ?)`);\n  // // do the binning here\n  // d3.text(\"/data/flights.json\", function(error, _data) {\n  //   db.exec(\"BEGIN TRANSACTION;\");\n  //   let arrays = d3.csvParseRows(_data);\n  //   arrays.forEach(d => {\n  //     insertData.run(d);\n  //   });\n  //   db.exec(`INSERT INTO binnedData SELECT * FROM binnedDataView`);\n  //   db.exec(\"COMMIT;\");\n  // });\n}\n\nexport function getXFilterStmts() {\n  let stmts: {\n    insertBrushItx: Statement;\n  };\n  if (!stmts) {\n    stmts = {\n      insertBrushItx: db.prepare(`INSERT INTO xBrushItx (ts, low, high, chart) VALUES (?, ?, ?, ?)`)\n    };\n  }\n  return stmts;\n}\n\n// the input should already be from a group_concat\n// they can just specify the remote\n\nexport function queryWorker(requestId: number, skipTable: string) {\n  console.log(\"worker doing job\", requestId);\n  let sharedTable = \"xFilterRequest\";\n  // now get the values for\n  // need to share the currentIn\n  // could use some basic DSL here --- copy pasting\n  let getTableDefinition = `\n    SELECT sql\n    FROM sqlite_master\n    WHERE\n      type = 'table'\n      AND name = '${sharedTable}';\n  `;\n  let definition = db.exec(getTableDefinition)[0].values[0];\n  if (!definition) {\n    throw new Error (`${sharedTable} not defined in client db`);\n  }\n  let tableRes = db.exec(`SELECT * FROM ${sharedTable} WHERE requestId = ${requestId}`)[0];\n  if ((!tableRes) || (!tableRes.values)) {\n    throw new Error(`This should not have happened, ${sharedTable} should have been defined with ${requestId}`);\n  }\n  // need to make null explicit here...\n  let shareSql = `\n    DROP TABLE IF EXISTS ${sharedTable};\n    ${definition};\n    INSERT INTO ${sharedTable} VALUES ${tableRes.values.map((d) => `(${d.map((v) => v ? v : \"null\").join(\", \")})`)};\n  `;\n  // console.log(\"sharesql\", shareSql);\n  let workerPromise = xFilterWorker();\n  workerPromise.then(worker => {\n    worker.postMessage({\n      id: `insertThenShare:${requestId}:${skipTable}`,\n      action: \"exec\",\n      sql: shareSql\n    });\n  });\n}\n\nexport function updateComponents() {\n  // if there is a new brush\n  // trigger the render from the sql\n  let res = db.run(`\n  `);\n  // res.values\n}\n\n// the 0 is so that we can reuse parsing on the javascript side\n// #WATCH: this might be an expensive query\nexport const initialStateSQL = `\nSELECT\n  d.chart, d.bin, d.count, 0 AS itxId\nFROM\n  chartData d\n  JOIN xFilterRequest r ON d.requestId = r.requestId\nWHERE\n  r.hourLow IS NULL AND r.hourHigh IS NULL\n  AND r.delayLow IS NULL AND r.delayHigh IS NULL\n  AND r.distanceLow IS NULL AND r.distanceHigh IS NULL;`;\n\nexport function getXFilterChroniclesSQL(buffer: number) {\n  return `\n  SELECT\n    d.chart,\n    d.bin,\n    d.count,\n    req.itxId AS itxId\n  FROM\n    xFilterResponse res\n    JOIN xFilterRequest req ON res.requestId = req.requestId\n    JOIN chartData d ON d.requestId = res.dataId\n  WHERE req.itxId IN (\n      SELECT itxId FROM currentItx ORDER BY itxId DESC LIMIT ${buffer}\n    )\n  ORDER BY itxId DESC;`;\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/records/XFilter/setup.ts","export function readFileSync(filename: string): string {\n  let request = new XMLHttpRequest();\n  request.open(\"GET\", filename, false);  // `false` makes the request synchronous\n  request.send(null);\n  if (request.status === 200) {\n    return request.responseText;\n  } else {\n    return \"\";\n  }\n}\n\nexport function readFileAsync(filename: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", filename, true);\n    xhr.onload = () => resolve(xhr.responseText);\n    xhr.onerror = () => reject(xhr.statusText);\n    xhr.send();\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/lib/helper.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { PageContainer } from \"./components/PageContainer\";\n\nReactDOM.render(\n  <PageContainer/>,\n  document.getElementById(\"wrapper\")\n);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/index.tsx","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 6\n// module chunks = 0","import * as React from \"react\";\n\nimport XFilterContainer from \"./XFilterContainer\";\nexport const PageContainer = () => (<>\n  <XFilterContainer />\n</>);\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/PageContainer.tsx","import * as React from \"react\";\n\nimport { Indicator } from \"./Indicator\";\nimport XFilterChart from \"./XFilterChart\";\nimport { db } from \"../records/setup\";\nimport { parseChartData, setupXFilterDB, XFILTERCHARTS, initialStateSQL, getXFilterChroniclesSQL } from \"../records/XFilter/setup\";\n\ninterface XFilterContainerState {\n  baseData: {[index: string]: {x: number, y: number}[]};\n  data: {[index: string]: {[index: string]: {x: number, y: number}[]}};\n  pending: boolean;\n  bufferSize: number;\n  itxIdSet: number[];\n  additionalLatency: number;\n}\n\nexport default class XFilterContainer extends React.Component<undefined, XFilterContainerState> {\n  constructor(props: undefined) {\n    super(props);\n    this.refreshXFilterData = this.refreshXFilterData.bind(this);\n    this.setPending = this.setPending.bind(this);\n    this.changeBuffer = this.changeBuffer.bind(this);\n    setupXFilterDB();\n    db.create_function(\"refreshXFilter\", this.refreshXFilterData);\n    db.create_function(\"setXFilterPending\", this.setPending);\n    let t = +new Date();\n    db.exec(`\n      INSERT INTO xBrushItx (ts, chart) VALUES ${XFILTERCHARTS.map((v) => `(${t}, '${v}')`).join(\", \")};\n    `);\n    this.state = {\n      baseData: null,\n      data: null,\n      itxIdSet: [],\n      pending: true,\n      additionalLatency: 0,\n      bufferSize: 1,\n    };\n  }\n\n  refreshXFilterData() {\n    if (!this.state.baseData) {\n      // try fetching itgroup_concat\n      let baseRes = db.exec(initialStateSQL);\n      let baseDataR = parseChartData(baseRes);\n      if (baseDataR.data) {\n        if (Object.keys(baseDataR.data).length !== 1) {\n          throw new Error(\"Basedata result should be exactly 1\");\n        }\n        let itxId = Object.keys(baseDataR.data)[0];\n        db.exec(`INSERT INTO xFilterRender (itxId, ts) VALUES (${itxId}, ${+new Date()})`);\n        this.setState({\n          baseData: baseDataR.data[itxId],\n        });\n      }\n    }\n    let query = getXFilterChroniclesSQL(this.state.bufferSize);\n    let res = db.exec(query);\n    let dataR = parseChartData(res);\n    if (dataR.data) {\n      // FIXME the pending right now is too coarse grained\n      let pending = false;\n      let maxItxId = Math.max(...Object.keys(dataR.data).map(v => parseInt(v, 10)));\n      db.exec(`INSERT INTO xFilterRender (itxId, ts) VALUES (${maxItxId}, ${+new Date()})`);\n      console.log(\"for xFitlerRend, we have the id\", maxItxId, \"and values\", dataR.data);\n      this.setState((prevState) => {\n        return {\n          data: dataR.data,\n          pending\n        };\n      });\n    }\n  }\n\n  setPending(isPending: number) {\n    console.log(\"setting pending to\", isPending);\n    let pending = false;\n    if (isPending) {\n      pending = true;\n    }\n    this.setState({\n      pending\n    });\n  }\n\n  changeBuffer(e: any) {\n    this.setState({bufferSize: e.target.value});\n  }\n\n  render() {\n    // TODO add pending\n    let {baseData, data, pending} = this.state;\n    let spinner: JSX.Element;\n    let charts: JSX.Element[] = [];\n    if (baseData) {\n      if (data) {\n        let keys = Object.keys(data).map(v => parseInt(v, 10)).sort().reverse();\n        for (let i = 0; i < keys.length; i++) {\n          let d = data[keys[i]];\n          let aBuffer = Object.keys(baseData).map(k => {\n            return <XFilterChart\n              baseData={baseData[k]}\n              xFilterData={d[k]}\n              control= {i === 0}\n              chart={k}\n              key={k}\n              pending={d[k] ? false : true}\n            />;\n          });\n          charts.push(<>\n            {aBuffer}\n            <div style={{clear: \"both\"}}></div>\n          </>);\n        }\n      } else {\n        charts = Object.keys(baseData).map(k => {\n          return <XFilterChart\n            baseData={baseData[k]}\n            control={true}\n            xFilterData={null}\n            chart={k}\n            key={k}\n            pending={true}\n          />;\n        });\n      }\n    } else {\n      spinner = <><Indicator />Loading Initial Data...</>;\n    }\n    return (\n      <div style={{position: \"sticky\", top: 0, backgroundColor: \"white\"}}>\n        {charts}\n        {spinner}\n        <select\n          value={this.state.bufferSize}\n          onChange={this.changeBuffer}\n        >\n        <option value={1}>1</option>\n        <option value={2}>2</option>\n        <option value={3}>3</option>\n        <option value={4}>4</option>\n        </select>\n      </div>);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/XFilterContainer.tsx","import * as React from \"react\";\nimport * as d3 from \"d3\";\n\nimport { Indicator } from \"./Indicator\";\nimport { db } from \"../records/setup\";\nimport { Datum } from \"../lib/data\";\nimport { getXFilterStmts } from \"../records/XFilter/setup\";\n\ninterface XFilterChartProps {\n  baseData: {x: number, y: number}[];\n  xFilterData: {x: number, y: number}[];\n  pending: boolean;\n  control: boolean;\n  chart: string;\n  baseFill?: string;\n  selectFill?: string;\n  height?: number;\n  width?: number;\n  marginBottom?: number;\n  marginLeft?: number;\n  marginRight?: number;\n  marginTop?: number;\n  yDomain?: [number, number];\n  maxZoomScale?: number;\n}\n\ninterface XFilterChartState {\n  scale: number;\n}\n\nexport default class XFilterChart extends React.Component<XFilterChartProps, XFilterChartState> {\n  // bars: SVGGElement;\n  // gX: SVGGElement;\n  // gY: SVGGElement;\n\n  static defaultProps = {\n    colorOverride: false,\n    baseFill: \"rgb(255, 192, 203, 0.5)\",\n    selectFill: \"rgb(176, 224, 230, 0.8)\",\n    height: 150,\n    marginBottom: 40,\n    marginLeft: 45,\n    marginRight: 20,\n    marginTop: 20,\n    width: 220,\n    showLabel: false,\n    showAxesLabels: true,\n    maxZoomScale: 5,\n  };\n  constructor(props: XFilterChartProps) {\n    super(props);\n    this.zoomed = this.zoomed.bind(this);\n    this.state = {\n      scale: 1,\n    };\n  }\n  zoomed() {\n    // console.log(\"zoom called, setting scale to \", d3.event.transform.k);\n    let scale = d3.event.transform.k;\n    if (Math.abs(scale - this.state.scale) > 0.05 * scale) {\n      this.setState({\n        scale\n      });\n    }\n  }\n  render() {\n    let { chart, width, height, baseFill, marginLeft, marginRight, marginTop, marginBottom, baseData, xFilterData, pending, selectFill, maxZoomScale, control } = this.props;\n    let { scale } = this.state;\n    let stmts = getXFilterStmts();\n    let spinner: JSX.Element = null;\n    let vis: JSX.Element = null;\n    if (pending) {\n      spinner = <Indicator />;\n    }\n    const innerWidth = width - marginLeft - marginRight;\n    const innerHeight = height - marginTop - marginBottom;\n    let bandwidth = innerWidth * 0.8 / baseData.length;\n    let x = d3.scaleLinear()\n              .rangeRound([0, innerWidth])\n              .domain([d3.min(baseData, (d) => d.x), d3.max(baseData, (d) => d.x)]);\n    if (scale > 1) {\n      let maxVal = d3.max(baseData, (d) => d.y);\n      let limit = maxVal / maxZoomScale * (maxZoomScale - scale + 1);\n      baseData = baseData.filter((d) => {return d.y < limit; });\n    }\n    let y = d3.scaleLinear()\n              .rangeRound([innerHeight, 0])\n              .domain([0, d3.max(baseData, (d) => d.y)]);\n    let yAxis = d3.axisLeft(y).ticks(5, \"d\");\n    let xAxis = d3.axisBottom(x).ticks(4);\n    let baseBars = baseData.map((d, i) => <rect x={x(d.x)} y={y(d.y)} width={bandwidth} height={innerHeight - y(d.y)} fill={baseFill}></rect>);\n    let selectBars = (xFilterData ? xFilterData : []).map((d, i) => <rect x={x(d.x)} y={y(d.y)} width={bandwidth} height={innerHeight - y(d.y)} fill={selectFill}></rect>);\n    if (!xFilterData) {\n      spinner = <><Indicator />Processing Request</>;\n    }\n    let brushDiv = null;\n    if (control) {\n      let brush = d3.brushX()\n                    .extent([[0, 0], [innerWidth, innerHeight]])\n                    .on(\"start\", function() {\n                      // TODO\n                      console.log(\"brush started\");\n                    })\n                    .on(\"end\", function() {\n                      const s = d3.brushSelection(this) as [number, number];\n                      if (s !== null) {\n                        let v1 = x.invert(s[0]);\n                        let v2 = x.invert(s[1]);\n                        stmts.insertBrushItx.run([+new Date(), Math.min(v1, v2), Math.max(v1, v2), chart]);\n                      }\n                    });\n      brushDiv = <g ref={ g => d3.select(g).call(brush) }></g>;\n    }\n    vis = <svg width={width} height={height} ref={(g) => {d3.select(g).call(zoom); }} style={{cursor: \"ns-resize\"}}>\n            <g  transform={`translate(${marginLeft}, ${marginTop})`} >\n              {baseBars}\n              {selectBars}\n              <g ref={(g) => {d3.select(g).call(yAxis); }}></g>\n              <g ref={(g) => { d3.select(g).call(xAxis); }} transform={\"translate(0,\" + innerHeight + \")\"}></g>\n              {brushDiv}\n              {spinner}\n            </g>\n          </svg>;\n    let zoom = d3.zoom()\n                 .scaleExtent([1, maxZoomScale])\n                 .translateExtent([[0, -100], [width, height]])\n                 .on(\"zoom\", this.zoomed);\n\n    // console.log(\"brush\", brushDiv);\n    return(<div style={{float: \"left\"}}>\n      {vis}\n    </div>);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/components/XFilterChart.tsx","module.exports = d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 10\n// module chunks = 0","module.exports = SQL;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"SQL\"\n// module id = 11\n// module chunks = 0","import { readFileSync } from \"../../lib/helper\";\nimport { db } from \"../setup\";\n\nlet worker: Worker = null;\n// for debugging\nlet opened = false;\nlet setup = false;\n(<any>window).worker = worker;\n\nexport function xFilterWorker(): Promise<Worker> {\n  return new Promise((resolve, reject) => {\n    if (!worker) {\n      worker = new Worker(\"./dist/worker.sql.js\");\n      fetch(\"./dist/flight_small.db\")\n      .then(response => {\n        if (response.status !== 200) {\n          console.log(`There was a problem: ${response.status}`);\n          return;\n        }\n        return response.arrayBuffer();\n      })\n      .then(buffer => {\n        console.log(\"Setting up db in the worker\", buffer);\n        worker.postMessage({\n          id: \"open\",\n          action: \"open\",\n          buffer,\n        });\n      });\n\n      worker.onmessage = function(event) {\n        // console.log(`[Worker] ${event.data.id}`, event);\n        // this is tied to the queryWorker in setup.ts\n        let args = event.data.id.split(\":\");\n        let cmd = args[0];\n        switch (args[0]) {\n          case \"open\": {\n            console.log(\"[Worker] Database opened\", event);\n            if (opened) {\n              throw new Error(\"Should not open worker DB twice\");\n            }\n            opened = true;\n            // /src/records/XFilter/workerViews.sql\n            let setupSql = readFileSync(`./dist/sql/XFilter/workerViews.sql`);\n            worker.postMessage({\n              id: \"setup\",\n              action: \"exec\",\n              sql: setupSql\n            });\n            break;\n          }\n          case \"setup\": {\n            if (setup) {\n              throw new Error(\"Should not setup worker DB twice\");\n            }\n            setup = true;\n            resolve(worker);\n            break;\n          }\n          case \"insertThenShare\": {\n            if ((!opened) || (!setup)) {\n              throw new Error(\"Need to setup worker DB before using\");\n            }\n            let requestId = args[1];\n            let skipTable = args[2];\n            console.log(`[Worker: insertThenShare] querying db to share data for requestId ${requestId}, except ${skipTable}`);\n            [\"hour\", \"delay\", \"distance\"].map((n) => {\n              if (n !== skipTable) {\n                let querySql = `\n                  SELECT * FROM ${n}ChartDataView;\n                `;\n                // this is emulating a callback\n                worker.postMessage({\n                  id: `share:${requestId}:${n}`,\n                  action: \"exec\",\n                  sql: querySql\n                });\n              }\n            });\n            break;\n          }\n          case \"share\": {\n            let requestId = args[1];\n            let chart = args[2];\n            // TODO: deal with pagination later?\n            if (event.data.results[0] && event.data.results[0].values.length > 0) {\n              let values = event.data.results[0].values;\n              let sql = `\n                INSERT INTO chartData VALUES ${values.map((r: any) => `(${requestId}, ${r[0]}, ${r[1]}, '${chart}')`)};\n                INSERT INTO chartDataAtomic VALUES (${requestId}, '${chart}');\n              `;\n              db.exec(sql);\n              // setTimeout(() => {\n              //   console.log(\"exec to client db after intentional delay\");\n              //   db.exec(sql);\n              // }, 1000);\n            } else {\n              console.log(\"No result for\", chart, requestId);\n            }\n            break;\n          }\n        }\n      };\n      worker.onerror = function(e) {console.log(\"Worker error: \", e); };\n    } else {\n      resolve(worker);\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/records/XFilter/workerSetup.ts"],"sourceRoot":""}